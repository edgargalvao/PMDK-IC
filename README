=================DESCRIPTION===================

Here is a description of the top-level directories:
1) Immutable-Datastructure-c++: Header-only library of MOD datastructures.
The datastructure definitions are found in the sub-folder immer/. Checkout benchmarks/benchmark.cpp for usage examples.
Two supported applications memcached and vacation are also present in subfolders in this top-level directory.

2) pmdk, libpmemobj-cpp: PMDK v1.5 libraries with some modifications to support compilation without logging mechanisms.

3) benchmarks: Microbenchmarks for both MOD, PMDK.

4) memcached-pmdk, vacation-pmdk: Supported applications implemented with PMDK.

5) graph-algo: BFS application implementations with both PMDK and MOD.

6) nvm_malloc: Memory allocation library used by MOD.

7) memslap: Memslap driver binary (may not work on all machines, please download independently as part of libmemcached). run.cnf file is configuration file for memslap.

8) pmem-valgrind: valgrind extended to handle clflushopt/clwb instructions by PMDK team. We have modified the lackey tool to report flushes/fences and PM stores.

=================INSTALL===================
B. Follow the following steps to compile the necessary software:

Compile pmdk:
$ cd pmdk; bash compile.sh

Compile nvm_malloc:
$ cd nvm_malloc; bash compile.sh

Compile vacation with pmdk:
$ cd vacation-pmdk; bash compile.sh

Compile memcached with pmdk:
$ cd memcached-pmdk; bash compile.sh

Compile vacation, memcached with mod:
$ cd Immutable-Datastructure-c++; bash compile.sh

Compile bfs with pmdk and mod:
$ cd graph-algo; bash compile.sh

Compile microbenchmarks:
$ cd benchmarks; bash compile.sh

Copy the memslap binary from the libmemcached dependency into the memslap folder

=================RUN===================
$ bash run.sh <PATH-to-new-folder>

